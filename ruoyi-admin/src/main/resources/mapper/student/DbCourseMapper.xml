<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.student.mapper.DbCourseMapper">
    
    <resultMap type="DbCourse" id="DbCourseResult">
        <result property="couId"    column="cou_id"    />
        <result property="couName"    column="cou_name"    />
        <result property="teaName"    column="tea_name"    />
        <result property="couCredit"    column="cou_credit"    />
        <result property="couHour"    column="cou_hour"    />
        <result property="couWay"    column="cou_way"    />
        <result property="teaId"    column="tea_id"    />
    </resultMap>

    <sql id="selectDbCourseVo">
        select c.cou_id, c.cou_name,c.tea_id,t.tea_name, c.cou_credit, c.cou_hour, c.cou_way from db_course c inner join db_teacher t on c.tea_id = t.tea_id
    </sql>

    <select id="selectDbCourseList" parameterType="DbCourse" resultMap="DbCourseResult">
        <include refid="selectDbCourseVo"/>
        <where>  
            <if test="couName != null  and couName != ''"> and c.cou_name like concat('%', #{couName}, '%')</if>
            <if test="teaName != null  and teaName != ''"> and t.tea_name like concat('%', #{teaName}, '%')</if>
            <if test="couWay != null  and couWay != ''"> and c.cou_way = #{couWay}</if>
        </where>
        order by c.cou_id asc
    </select>
    
    <select id="selectDbCourseByCouId" parameterType="Long" resultMap="DbCourseResult">
        <include refid="selectDbCourseVo"/>
        where c.cou_id = #{couId}
    </select>
        
    <insert id="insertDbCourse" parameterType="DbCourse" useGeneratedKeys="true" keyProperty="couId">
        insert into db_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="couName != null and couName != ''">cou_name,</if>
            <if test="teaId != null and teaId != ''">tea_id,</if>
            <if test="couCredit != null">cou_credit,</if>
            <if test="couHour != null">cou_hour,</if>
            <if test="couWay != null and couWay != ''">cou_way,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="couName != null and couName != ''">#{couName},</if>
            <if test="teaId != null and teaId != ''">#{teaId},</if>
            <if test="couCredit != null">#{couCredit},</if>
            <if test="couHour != null">#{couHour},</if>
            <if test="couWay != null and couWay != ''">#{couWay},</if>
         </trim>
    </insert>

    <update id="updateDbCourse" parameterType="DbCourse">
        update db_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="couName != null and couName != ''">cou_name = #{couName},</if>
            <if test="teaId != null and teaId != ''">tea_id = #{teaId},</if>
            <if test="couCredit != null">cou_credit = #{couCredit},</if>
            <if test="couHour != null">cou_hour = #{couHour},</if>
            <if test="couWay != null and couWay != ''">cou_way = #{couWay},</if>
        </trim>
        where cou_id = #{couId}
    </update>

    <delete id="deleteDbCourseByCouId" parameterType="Long">
        delete from db_course where cou_id = #{couId}
    </delete>

    <delete id="deleteDbCourseByCouIds" parameterType="String">
        delete from db_course where cou_id in 
        <foreach item="couId" collection="array" open="(" separator="," close=")">
            #{couId}
        </foreach>
    </delete>
</mapper>